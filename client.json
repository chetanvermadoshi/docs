{
  "openapi": "3.0.0",
  "info": {
    "title": "Doshi Client API",
    "version": "1.0.0",
    "description": "API specification for Doshi client-facing services."
  },
  "servers": [
   {
      "url": "https://production-doshi-api-8kq2.encr.app",
      "description": "Production server"
    },
    {
      "url": "https://sandbox.api.doshi.app",
      "description": "Sandbox server"
    }
  ],
  "tags": [
    {
      "name": "Academy",
      "description": "Endpoints related to educational content like courses, lessons, and paths."
    },
    {
      "name": "Auth",
      "description": "Endpoints for user authentication and authorization."
    },
    {
      "name": "Marketplace",
      "description": "Endpoints for rewards and redemptions."
    },
    {
      "name": "User",
      "description": "Endpoints for user data."
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Authentication token provided by the auth endpoints."
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "required": ["code", "message"]
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "required": ["success"]
      },
      "GetAuthTokenRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "partnerUserId": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "pathId": {
            "type": "string"
          },
          "branchId": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "format": "date"
          },
          "organizationId": {
            "type": "string"
          }
        },
        "description": "Request body for generating an authentication token."
      },
      "AuthTokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "isNewUser": {
            "type": "boolean"
          },
          "institutionId": {
            "type": "string"
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "preference": {
            "type": "object",
            "additionalProperties": true
          },
          "brand": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "required": ["token", "userId", "isNewUser", "institutionId"]
      },
      "OtpRequiredResponse": {
        "type": "object",
        "properties": {
          "isOtpRequired": {
            "type": "boolean",
            "example": true
          },
          "success": {
            "type": "boolean",
            "example": true
          }
        },
        "required": ["isOtpRequired", "success"]
      },
      "GetAuthTokenResponse": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AuthTokenResponse"
          },
          {
            "$ref": "#/components/schemas/OtpRequiredResponse"
          }
        ]
      },
      "SendOTPRequest": {
        "type": "object",
        "properties": {
          "req": {
            "type": "object",
            "properties": {
              "organizationId": {
                "type": "string"
              },
              "partnerUserId": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "dob": {
                "type": "string",
                "format": "date"
              }
            },
            "required": [
              "organizationId",
              "partnerUserId",
              "firstName",
              "lastName",
              "dob"
            ]
          },
          "channel": {
            "type": "string",
            "enum": ["sms", "call", "whatsapp"],
            "default": "sms"
          }
        },
        "required": ["req"]
      },
      "VerifyOTPRequest": {
        "type": "object",
        "properties": {
          "req": {
            "$ref": "#/components/schemas/GetAuthTokenRequest"
          },
          "code": {
            "type": "string"
          }
        },
        "required": ["req", "code"]
      },
      "Course": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "name"]
      },
      "GetCoursesResponse": {
        "type": "object",
        "properties": {
          "courses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Course"
            }
          },
          "total": {
            "type": "integer"
          }
        },
        "required": ["courses", "total"]
      },
      "LessonSubmission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "lessonId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "pathId": {
            "type": "string",
            "nullable": true
          },
          "levelId": {
            "type": "string",
            "nullable": true
          },
          "isCompleted": {
            "type": "boolean"
          },
          "completedQuestionIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rightAnsweredQuestionIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rewardedQuestionIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "earnedDosh": {
            "type": "number"
          },
          "earnedXP": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "correctAnswers": {
            "type": "number"
          },
          "totalQuestions": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "lessonId",
          "userId",
          "isCompleted",
          "earnedDosh",
          "earnedXP",
          "createdAt",
          "correctAnswers",
          "totalQuestions"
        ]
      },
      "GetLessonSubmissionsResponse": {
        "type": "object",
        "properties": {
          "submissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LessonSubmission"
            }
          },
          "total": {
            "type": "integer"
          }
        },
        "required": ["submissions", "total"]
      },
      "Lesson": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "content": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": ["id", "title"]
      },
      "GetLessonsResponse": {
        "type": "object",
        "properties": {
          "lessons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Lesson"
            }
          },
          "total": {
            "type": "integer"
          }
        },
        "required": ["lessons", "total"]
      },
      "Path": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "emoji": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "contents": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "name"]
      },
      "GetPathsResponse": {
        "type": "object",
        "properties": {
          "paths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Path"
            }
          },
          "total": {
            "type": "integer"
          }
        },
        "required": ["paths", "total"]
      },
      "RedeemedReward": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "delivered": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "priceAtPurchase": {
            "type": "number"
          },
          "requireVerification": {
            "type": "boolean"
          },
          "rewardId": {
            "type": "string"
          },
          "rewardType": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "delivered",
          "status",
          "priceAtPurchase",
          "requireVerification",
          "rewardId",
          "rewardType",
          "userId",
          "createdAt"
        ]
      },
      "GetRedeemedRewardsResponse": {
        "type": "object",
        "properties": {
          "redeemedRewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RedeemedReward"
            }
          },
          "total": {
            "type": "integer"
          }
        },
        "required": ["redeemedRewards", "total"]
      },
      "Reward": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": ["id", "name", "price", "type"]
      },
      "GetRewardsResponse": {
        "type": "object",
        "properties": {
          "rewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reward"
            }
          },
          "total": {
            "type": "integer"
          }
        },
        "required": ["rewards", "total"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "partnerUserId": {
            "type": "string",
            "nullable": true
          },
          "academyPathId": {
            "type": "string",
            "nullable": true
          },
          "sumsubVerificationResult": {
            "type": "string",
            "nullable": true
          },
          "segmentProgress": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "platforms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "xpBalance": {
            "type": "number",
            "nullable": true
          },
          "doshBalance": {
            "type": "number",
            "nullable": true
          },
          "lifeBalance": {
            "type": "number",
            "nullable": true
          }
        },
        "required": ["id", "email", "createdAt", "updatedAt"]
      },
      "GetUsersResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "total": {
            "type": "integer"
          }
        },
        "required": ["users", "total"]
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/client/auth/token": {
      "post": {
        "tags": ["Auth"],
        "summary": "Get Authentication Token",
        "description": "Generates a custom Firebase authentication token for a user. Can also trigger a 2FA flow if enabled for the institution.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAuthTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication token response or OTP required indicator.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAuthTokenResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/auth/send-otp": {
      "post": {
        "tags": ["Auth"],
        "summary": "Send OTP",
        "description": "Sends a One-Time Password (OTP) to the user's phone number for 2FA.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendOTPRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully sent OTP.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/auth/verify-otp": {
      "post": {
        "tags": ["Auth"],
        "summary": "Verify OTP",
        "description": "Verifies the OTP code and, if successful, returns an authentication token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOTPRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully verified OTP and generated token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/academy/courses": {
      "get": {
        "tags": ["Academy"],
        "summary": "Get Courses",
        "description": "Fetches a list of available courses for the user's institution.",
        "responses": {
          "200": {
            "description": "A list of courses.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCoursesResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/academy/lesson-submissions": {
      "get": {
        "tags": ["Academy"],
        "summary": "Get Lesson Submissions",
        "description": "Fetches lesson submission data, with optional filters.",
        "parameters": [
          {
            "name": "levelId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pathId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lessonId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of lesson submissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLessonSubmissionsResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/academy/lessons": {
      "get": {
        "tags": ["Academy"],
        "summary": "Get Lessons",
        "description": "Fetches a list of available lessons, including core and institution-specific lessons.",
        "responses": {
          "200": {
            "description": "A list of lessons.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLessonsResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/academy/paths": {
      "get": {
        "tags": ["Academy"],
        "summary": "Get Paths",
        "description": "Fetches a list of available learning paths for the user's institution.",
        "responses": {
          "200": {
            "description": "A list of paths.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPathsResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/marketplace/redeemed-rewards": {
      "get": {
        "tags": ["Marketplace"],
        "summary": "Get Redeemed Rewards",
        "description": "Fetches a list of rewards redeemed by users, filterable by userId.",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of redeemed rewards.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRedeemedRewardsResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/marketplace/rewards": {
      "get": {
        "tags": ["Marketplace"],
        "summary": "Get Rewards",
        "description": "Fetches a list of available rewards in the marketplace for the user's institution.",
        "responses": {
          "200": {
            "description": "A list of rewards.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRewardsResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get Users",
        "description": "Fetches a list of users for the institution, optionally filtered by branchId.",
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}